
Chat window clears on hide


    this.sendMessage = ev => {
      ev.preventDefault();
      this.socket.emit('SEND_MESSAGE', {
        author: this.state.username,
        message: this.state.message
      });
      console.log(this.state.message);
      this.setState({message: ''});
      console.log("sending message");

    }
  }

  const ChatWindow = () =>(
     <div className="container">
      <div className="row">
        <div className="card-body">
          <div className="card-title">Global Chat</div>
          <hr/>
          <div className="messages">
            {
              this.state.messages.map(message => {
                return (<div>{message.author}: {message.message}</div>)
              })
            }
          </div>

        </div>
        <div className="card-footer">
          <input type="text" placeholder="Username" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className="form-control"/>
          <br/>
          <input type="text" placeholder="Message" className="form-control" value={this.state.message} onChange={ev => this.setState({message: ev.target.value})}/>
          <br/>
          <button onClick={this.sendMessage} className="btn btn-primary form-control">Send</button>
        </div>
      </div>
    </div>);

render () {
  return (
    <div>
      <i className="material-icons table-button" onClick={this.toggleHidden.bind(this)}>view_list</i>
      {!this.state.isHidden && <ChatWindow />}
    </div>
  )
}
}

export default Chat;



drag_start=(event)=> {
  var style = window.getComputedStyle(event.target, null);
  event.dataTransfer.setData("text/plain",
  (parseInt(style.getPropertyValue("left"),10) - event.clientX) + ',' + (parseInt(style.getPropertyValue("top"),10) - event.clientY));
}
drag_over=(event)=> {
  event.preventDefault();
  return false;
}
drop=(event)=> {
  var offset = event.dataTransfer.getData("text/plain").split(',');
  var dm = document.getElementById('dragme');
  dm.style.left = (event.clientX + parseInt(offset[0],10)) + 'px';
  dm.style.top = (event.clientY + parseInt(offset[1],10)) + 'px';
  event.preventDefault();
  return false;
